<?xml version="1.0" encoding="utf-8" ?>
<!-- 
  * Copyright (c) 2008 empolis GmbH and brox IT Solutions GmbH. 
	* All rights reserved. This program and the accompanying materials
	* are made available under the terms of the Eclipse Public License v1.0
	* which accompanies this distribution, and is available at
	* http://www.eclipse.org/legal/epl-v10.html
	*
	* Contributors:
	*    Daniel Stucky (empolis GmbH) - initial design
-->
<process name="XmlDumpSplitterPipeline" targetNamespace="http://www.eclipse.org/smila/processor"
	xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:proc="http://www.eclipse.org/smila/processor" xmlns:rec="http://www.eclipse.org/smila/record">

	<import location="processor.wsdl" namespace="http://www.eclipse.org/smila/processor"
		importType="http://schemas.xmlsoap.org/wsdl/" />

	<partnerLinks>
		<partnerLink name="Pipeline" partnerLinkType="proc:ProcessorPartnerLinkType" myRole="service" />
	</partnerLinks>

	<extensions>
		<extension namespace="http://www.eclipse.org/smila/processor" mustUnderstand="no" />
	</extensions>

	<variables>
		<variable name="request" messageType="proc:ProcessorMessage" />
	</variables>

	<sequence>
		<receive name="start" partnerLink="Pipeline" portType="proc:ProcessorPortType" operation="process" variable="request"
			createInstance="yes" />

        <if name="conditionHasMimeType">
            <condition>not($request.records/rec:Record[1]/rec:A[@n="MimeType"]/rec:L)</condition>
			<sequence name="detectMimeType">		  

                <extensionActivity name="invokeMimeTypeIdentifyService">
                    <proc:invokeService>
                        <proc:service name="MimeTypeIdentifyService" />
                        <proc:variables input="request" output="request" />
                    </proc:invokeService>
                </extensionActivity>

            </sequence>				
        </if>		

 		<!-- check for xml mimetype and ignore all other mimetyps -->

        <if name="conditionIsXml">
            <condition>starts-with($request.records/rec:Record[1]/rec:A[@n="MimeType"]/rec:L/rec:V, "text/xml") </condition>
            <!-- split xml files -->
            <extensionActivity name="invokeXmlSplitter">
                <proc:invokePipelet>
                    <proc:pipelet class="org.eclipse.smila.processing.pipelets.xmlprocessing.XmlSplitterPipelet" />
                    <proc:variables input="request" output="request" />
                    <proc:PipeletConfiguration>
                        <proc:Property name="inputType">
                            <proc:Value>ATTRIBUTE</proc:Value>
                        </proc:Property>				       
                        <proc:Property name="outputType">
                            <proc:Value>ATTRIBUTE</proc:Value>
                        </proc:Property>
                        <proc:Property name="inputName">
                            <proc:Value>Path</proc:Value>
                        </proc:Property>
                        <proc:Property name="outputName">
                            <proc:Value>Content</proc:Value>
                        </proc:Property>
                        <proc:Property name="beginTagName">
                            <proc:Value>page</proc:Value>
                        </proc:Property>
                        <proc:Property name="isBeginClosingTag">
                            <proc:Value>false</proc:Value>
                        </proc:Property>
                        <proc:Property name="endTagName">
                            <proc:Value>page</proc:Value>
                        </proc:Property>
                        <proc:Property name="isEndClosingTag">
                            <proc:Value>true</proc:Value>
                        </proc:Property>
                        <proc:Property name="keyTagName">
                            <proc:Value>title</proc:Value>
                        </proc:Property>
                    </proc:PipeletConfiguration>       								
                </proc:invokePipelet>
            </extensionActivity>                         
        </if>			                		
			

		<reply name="end" partnerLink="Pipeline" portType="proc:ProcessorPortType" operation="process" variable="request" />
		<exit />
	</sequence>
</process>
